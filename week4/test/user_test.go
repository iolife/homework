##  隔离

目的： 发生故障的服务， 不会引起其他服务不可用

### 服务隔离

#### 动静隔离

将一些只读的资源（写较少的资源）和经常需要写的资源分开（如静态资源和动态 api），只读资源更方便做并发和缓存

#### 轻重隔离

核心和非核心业务分开， 高流量的情况下， 给核心业务提供更多的资源

#### 快慢隔离

防止慢处理对全局反压

#### 热点隔离

对一些热点提前预热，缓存

### 物理隔离

线程隔离

进程隔离

集群隔离



## 超时控制

网络传递具有不确定性， 超时控制可防止大量请求被挂起

- kit 库应提供默认超时策略， 防止某些服务未配置超时
- 传递性，上游服务已返回 504，下游服务不应该继续执行



## 过载保护

令牌桶算法

​	单节点

- cpu 滑动均值（cpu > 800) 作为启发阈值

漏桶算法

## 限流

## 降级

丢弃某些相对不重要的流量，提供有损的服务

触发条件

- 容量规划失误
- 意外的负载
- 演练

## 重试

## 负载均衡
